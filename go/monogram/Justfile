[private]
@default:
    just --list

# Install both executables into your bin directory.
# You might need to adjust the destination if you have a GOBIN set.
install:
    just build-full
    just build-mini
    # Install to GOBIN if set, otherwise fallback to $(go env GOPATH)/bin
    if [ -n "`go env GOBIN`" ]; then \
      cp monogram "$(go env GOBIN)/monogram"; \
      cp monogram-mini "$(go env GOBIN)/monogram-mini"; \
    else \
      cp monogram "$(go env GOPATH)/bin/monogram"; \
      cp monogram-mini "$(go env GOPATH)/bin/monogram-mini"; \
    fi

# Alias: build both full and mini executables
build: build-full build-mini

build-for-docker:
    # Build the full executable with the web server enabled but flagged for docker
    go build -tags withweb -ldflags="-X 'main.IsBuiltForDocker=true'" -o monogram ./cmd/monogram

# Build the full executable with the web server enabled
build-full:
    go build -tags withweb -o monogram ./cmd/monogram

# Build the reduced executable without the web server (and thus without the --test flag)
build-mini:
    go build -o monogram-mini ./cmd/monogram

# Run the unittests
unittest:
    # go test -v -cover ./lib
    go test -cover ./lib

# Generate a coverage report for the unittests
unittest-coverage:
    rm -rf _build
    mkdir -p _build/
    go test -cover -coverprofile=_build/unittest.out ./lib
    go tool cover -html=_build/unittest.out -o _build/unittest.html
    #open _build/unittest.html


# Run the functional tests
functest: build-mini
    (cd ../../functests && poetry run python3 functest.py --tests tests.yaml --command='../go/monogram/monogram-mini')

functest-coverage: build-mini
    go build -cover -o monogram-test-coverage ./cmd/monogram
    rm -rf _build
    mkdir -p _build/functest
    mkdir -p _build/merged_functest
    (cd ../../functests && env GOCOVERDIR=../go/monogram/_build/functest  poetry run python3 functest.py --tests tests.yaml --command='../go/monogram/monogram-mini')
    go tool covdata merge -i=_build/functest -o=_build/merged_functest
    go tool covdata textfmt -i=_build/functest -o=_build/functest.out
    go tool cover -func=_build/functest.out > _build/functest.txt
    go tool cover -html=_build/functest.out -o _build/functest.html
    #open _build/functest.html

