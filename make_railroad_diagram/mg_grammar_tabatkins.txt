// Grammar
Diagram(
    Comment('Document'),
    ZeroOrMore(NonTerminal('Expression'))
)

// Expression
Diagram(
    Comment('Expression'),
    Choice(0,
        NonTerminal('Literal'),
        NonTerminal('Identifier'),
        NonTerminal('DelimitedExpression'),
        NonTerminal('ApplyExpression'),
        NonTerminal('GetExpression'),
        NonTerminal('InvokeExpression'),
        NonTerminal('OperatorExpression'),
        NonTerminal('FormExpression'),
        NonTerminal('PrefixForm'),
        NonTerminal('ElementExpression')
    )
)

// Arguments
Diagram(
    Comment('Arguments'),
    Optional(
        Sequence(
            NonTerminal('Expression'),
            ZeroOrMore(
                Sequence(
                    Terminal(','),
                    NonTerminal('Expression')
                )
            )
        )
    )
)

// Statements
Diagram(
    Comment('Statements'),
    Sequence(
        ZeroOrMore(
            Sequence(
                NonTerminal('Expression'),
                Choice(0, Terminal(';'), Terminal('\\n'))
            )
        ),
        Optional(NonTerminal('Expression'))
    )
)

// Literal
Diagram(
    Comment('Literal'),
    Choice(0,
        NonTerminal('number'),
        NonTerminal('string')
    )
)

// DelimitedExpression
Diagram(
    Comment('DelimitedExpression'),
    Choice(
        0,
        Sequence(
            Terminal('('),
            NonTerminal('Arguments'),
            Terminal(')')
        ),
        Sequence(
            Terminal('['),
            NonTerminal('Arguments'),
            Terminal(']')
        ),
        Sequence(
            Terminal('{'),
            NonTerminal('Arguments'),
            Terminal('}')
        )
    )
)

// ApplyExpression
Diagram(
    Comment('ApplyExpression'),
    Sequence(
        NonTerminal('Expression'),
        NonTerminal('DelimitedExpression')
    )
)

// GetExpression
Diagram(
    Comment('GetExpression'),
    Sequence(
        NonTerminal('Expression'),
        Terminal('.'),
        NonTerminal('Identifier')
    )
)

// InvokeExpression
Diagram(
    Comment('InvokeExpression'),
    Sequence(
        NonTerminal('GetExpression'),
        NonTerminal('DelimitedExpression')
    )
)

// OperatorExpression
Diagram(
    Comment('OperatorExpression'),
    Sequence(
        NonTerminal('Expression'),
        NonTerminal('Operator'),
        NonTerminal('Expression')
    )
)

// FormExpression
Diagram(
    Comment('FormExpression'),
    Sequence(
        NonTerminal('form-start'),
        Optional(
            Sequence(
                NonTerminal('Expression'),
                Terminal(':')
            )
        ),
        NonTerminal('Statements'),
        ZeroOrMore(NonTerminal('Part')),
        NonTerminal('form-end')
    )
)



// Part
Diagram(
    Comment('Part'),
    Choice(
        0,
        Sequence(
            NonTerminal('NamedBreaker'),
            NonTerminal('Statements')
        ),
        Sequence(
            Terminal('CascadedBreaker'),
            Optional(
                Sequence(
                    NonTerminal('Expression'),
                    Terminal(':')
                )
            ),
            NonTerminal('Statements')
        )
    )
)

// NamedBreaker
Diagram(
    Comment('NamedBreaker'),
    Sequence(
        NonTerminal('Identifier'),
        Terminal(':'),
    )
)


// Cascaded Breaker
Diagram(
    Comment('CascadedBreaker'),
    Sequence(
        NonTerminal('CoreIdentifier'),
        Terminal('-'),
        NonTerminal('enclosing-form-start'),
        Terminal(':')
    )
)

// PrefixForm
Diagram(
    Comment('PrefixForm'),
    Sequence(
        NonTerminal('CoreIdentifier'),
        Terminal('!'),
        ZeroOrMore(NonTerminal('Expression')),
        ZeroOrMore(
            Choice(0, NonTerminal('NamedBreaker'), NonTerminal('CascadedBreaker')),
            ZeroOrMore(NonTerminal('Expression'))
        ),
        Optional(Choice(0, Terminal(';'), Terminal('\\n')))
    )
)

// ElementExpression
Diagram(
    Comment('ElementExpression'),
    Choice(
        0,
        NonTerminal('StandaloneTag'),
        Sequence(
            NonTerminal('StartTag'),
            NonTerminal('Statements'),
            NonTerminal('EndTag')
        )
    )
)

// StandaloneTag
Diagram(
    Comment('StandaloneTag'),
    Sequence(
        Terminal('<'),
        NonTerminal('TagName'),
        ZeroOrMore(
            Choice(
                0,
                NonTerminal('DelimitedExpression'),
                Sequence(
                    NonTerminal('TagName'),
                    Terminal('='),
                    Choice(0, NonTerminal('Literal'), NonTerminal('DelimitedExpression'))
                )
            )
        ),
        Terminal('/>')
    )
)


// StartTag
Diagram(
    Comment('StartTag'),
    Sequence(
        Terminal('<'),
        NonTerminal('TagName'),
        ZeroOrMore(
            Choice(
                0,
                NonTerminal('DelimitedExpression'),
                Sequence(
                    NonTerminal('TagName'),
                    Terminal('='),
                    Choice(0, NonTerminal('Literal'), NonTerminal('DelimitedExpression'))
                )
            )
        ),
        Terminal('>')
    )
)

// EndTag
Diagram(
    Comment('EndTag'),
    Terminal('</'),
    Choice(0, NonTerminal('Identifier'), Terminal('_')),
    Terminal('>')
)

// TagName
Diagram(
    Comment('TagName'),
    Choice(
        0,
        NonTerminal('Identifier'),
        NonTerminal('DelimitedExpression')
    )
)

